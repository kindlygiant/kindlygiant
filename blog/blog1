Blog #1 - Apr 7 2021

Not sure why I wanted to do this. I suppose I see other people making blogs about what they work on and it's entertaining to some people. 
Maybe someone will think this is entertaining someday.

Probably not.

I'm messing around with starting kindlygiant.com and I don't know what I want to use that for. So I thought, might as well start with a blog.
Next thought in that process was, obviously, what colors do I want the blog to have? I thought of blues, teals, nice woody browns and dark greys.
So I thought I'd write those down.

13262F - Antique Bronze - For highlights
583e23 - Cafe Noir - For lowlights
73683b - Gunmetal - for backgrounds
547b8c - Teal Blue - for midlights

As you can see I have no idea what I'm doing. I've googled some basics and the first step was "find something you like". Well the whole reason
I've started this was because I saw this guy's website: https://androidarts.com/ and thought "That's rad. I want to build some of his stuff."
So I guess i'll look at some of his stuff to see what he's got going on.

I love the retrofuturism look he does. Reminds me of Tales from the Loop which I love the art from and was kind of sad I gave that book away 
for a secret santa instead of keeping it for myself. He uses a lot of beige and wood colors. Greys and whites. I should probably throw in a light color.

cad6dc - Light Grey - For text and stuff

Holy crap I forgot I have the night light on and just seared my retinas looking at the screen. But hey, the palette doesn't look too shabby. At least for now.
I'm sure once someone else looks at it they'll be like "...Why?" But who cares? This is mine for the time being. It's a credit to my attention span that no sooner
had i finished picking the colors, I was already on the next thing to catch my attention. Mainly which text editor I should be using to write this. There's probably
something better than nano but I'll deal for now.

Oh shoot. Amazon made a TV series about Tales from the Loop. I wonder if it's any good.

I'll try making something with those colors. It might be garbage. It might not. Who knows. 

Before I do I think I'll set up the website first. I've already got a few running on the raspberry pi. I wonder if docker works with raspberry pis. Apparently
it works. Might as well write a Dockerfile for it. I've been working with my friend Luis to try and understand how docker works. This will be good practice.

FROM ubuntu:latest AS build

ENV TZ=US
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update && \
    apt-get install -y git && \
    apt-get install -y nodejs && \
    apt-get install -y npm

RUN git clone https://github.com/kindlygiant/kindlygiant.git
WORKDIR /kindlygiant
RUN npm install
RUN npm run build

FROM httpd:2.4
COPY --from=build /kindlygiant/build/ /usr/local/apache2/htdocs/

TODO
Got to make a kindlygiant repo on github.

I wonder if I could get Kubernetes to work with my raspberry pi. I'll have to ask Luis about that. Okay the Dockerfile is made, it's not going to build anything but it's there.
Next question, do I REALLY want to make this website React as well? I mean I could I just feel like it's a pain. But I suppose it's better than writing 
static HTML pages and linking them together right? We'll do React. Ugh fine. I have to look up how to start that up. Probably some node nonsense.

npx create-react-app my-app
cd my-app
npm start

Yep. Although I did make the mistake of making the kindlygiant directory before running this. Oops. Nested directories. I had to rename the existing folder and re run the commands.

  npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you canâ€™t go back!

Just gonna add these commands in here because I'm a big dummy who can't remember things.

Yee haw. Now we're cooking with gas. I'll just move over the blog folder and Dockerfile then commit this locally for now.

